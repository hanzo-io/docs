swagger: '2.0'
info:
  version: v1.0
  title: Variant API
  description: >-
    A Variant represents a specific kind of Product. Typically,
    they are used to represent a particular color, size, color/size
    combination, etc.
host: api.hanzo.io
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  oauth2:
    type: oauth2
    flow: password
    scopes: {}
    tokenUrl: 'https://api.hanzo.io/auth'
  Authorization:
    name: Authorization
    type: apiKey
    in: header
  token:
    name: token
    type: apiKey
    in: query
paths:
  '/variant/{id}':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    delete:
      operationId: DELETE_variant-id
      description: >-
        Permanently deletes a Variant
      produces:
        - text/html
      parameters:
        - name: token
          in: query
          required: false
          type: string
          description: The unique identifier for the Variant.
        - name: Accept
          in: header
          required: false
          type: string
      responses:
        '204':
          description: 'Everything is OK.'
          schema:
            type: object
            properties: {}
    patch:
      operationId: PATCH_variant-id
      description: >-
        Updates a variant partially. Parameters not passed are not updated.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Variant'
      responses:
        '200':
          description: 'Everything is OK.'
          schema:
            $ref: '#/definitions/Variant'
    put:
      operationId: PUT_variant-id
      description: >-
        Updates the object wholly. Unpassed parameters are blanked.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Variant'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variant'
    get:
      operationId: GET_variant-id
      description: >-
        Gets a specific Variant, keyed by ID.
      parameters:
        - name: token
          in: query
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variant'
  /variant:
    post:
      description: >-
        Creates a new Variant.
      operationId: post_variant
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Variant'
      responses:
        '201':
          description: 'Everything is ok!'
          schema:
            $ref: '#/definitions/Variant'
    get:
      description: >-
        Returns a list of all available Variants.
      parameters:
        - name: token
          in: query
          type: string
        - name: accept
          in: header
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/VariantArray'
  '/store/{id}/variant/{key}':
    parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: key
        in: path
        required: true
        type: string
    get:
      operationId: GET_store-id-variant-key
      description: >-
        Returns a specific Variant if it is accessible inside the store.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variant'
    patch:
      operationId: PATCH_store-id-variant-key
      description: >-
        Updates a variant the store has access to partially. Parameters
        not included are ignored.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variant'
    delete:
      operationId: DELETE_store-id-variant-key
      description: >-
        Deletes a variant the store has access to. Cannot be undone.
      responses:
        '204':
          description: 'Everything is OK.'
          schema:
            type: object
            properties: {}
    put:
      operationId: PUT_store-id-variant-key
      description: >-
        Wholly replaces a variant the store has access to. Parameters
        not included are blanked.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Variant'
definitions:
  Variant:
    title: Variant
    description: A Variant model, usable in POST, PUT, or PATCH requests,
      and returned as a response from GET, POST, PUT, and PATCH.
    type: object
    properties:
      id:
        type: string
        description: The hanzo-assigned guid to identify this item.
      productId:
        type: string
        description: The ID of the product this Variant is
          associated with (or, a variant of).
      sku:
        type: string
        description: The unique identifier for stock-keeping.
          Can technically be whatever as long as it is unique,
          but recommended to be the same as UPC if you have
          one available for your product.
      createdAt:
        type: string
        description: The time this Variant was created. Conforms to RFC3339.
      updatedAt:
        type: string
        description: The time this Variant was last updated. Conforms to RFC3339.
      price:
        type: integer
        format: int64
        description: How much something costs, in the lowest
          value unit available in the currency your store runs
          in. USD stores will use cents, JPY stores will use yen, etc.
      inventory:
        type: integer
        format: int64
        description: The number of items on hand and ready for sale.
      weight:
        type: integer
        format: int64
        description: The mass of the item. Traditionally kept in grams.
      dimensions:
        type: string
        description: The physical measurements of the item. Traditionally
          kept in length x width x height and in centimeters.
      options:
        type: object
  VariantArray:
    title: VariantArray
    description: An array of Variants
    type: array
    items:
      $ref: '#/definitions/Variant'
