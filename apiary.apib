FORMAT: 1A

# Hanzo
The Hanzo API is designed to handle all of the most common tasks with
associated with running a crowdfunding campaign.

The API is currently in beta. Please contact support@hanzo.io if you
intend to use our API in any production code.

# Group Checkout API
Our Checkout API supports one-step (charge endpoint) and two payment (authorize,
capture) processes.

## One-step Payments [/checkout/charge]
The one-step payment process is mostly used for general commerce for immediate
fulfillment/sale.  In general, you must send three things to successfully
complete a charge call: order information, payment information, and user
information. In essence, the one-step payment method takes this information,
authorizes the payment, and, if successful, immediately attempts to capture it.
Any failure in this process will result in a failure of the call.

### Charge an Order [POST]
+ Request (application/json)

        {
            "buyer": {
                "type":"card",
                "number":"4242424242424242",
                "month":"12",
                "year":"2016",
                "cvc":"123",
                "email":"joe@buystoomuchstuff.com",
                "firstName":"Joe",
                "lastName":"Smoe",
                "company":"Buys Too Much Stuff Dotcom",
                "phone":"555-555-5555",
                "notes":"none"
            },
            "order": {
                "currency":"usd",
                "items":[
                    {
                        "productId":"1",
                        "variantId":"1",
                        "collectionId":"1",
                        "price":100,
                        "quantity":20
                    }
                ]
            }
        }

+ Response 200 (application/json)

        {
          "id":"9",
          "createdAt":"2015-03-23T04:13:56.666272023Z",
          "updatedAt":"2015-03-23T04:13:58.989441381Z",
          "campaignId":"",
          "orderStatus":"",
          "paymentStatus":"",
          "fulfillmentStatus":"",
          "preorder":false,
          "unconfirmed":false,
          "currency":"usd",
          "type":"",
          "shippingMethod":"",
          "lineTotal":2000,
          "discount":0,
          "subtotal":2000,
          "shipping":0,
          "tax":0,
          "total":2000,
          "balance":0,
          "paid":0,
          "refunded":0,
          "fee":0,
          "billingAddress":{

          },
          "shippingAddress":{

          },
          "items":[
            {
              "productId":"1",
              "productName":"",
              "productSlug":"",
              "collectionId":"1",
              "variantId":"1",
              "variantName":"",
              "variantSKU":"",
              "price":100,
              "quantity":20,
              "weight":0,
              "taxable":false
            }
          ],
          "discounts":[

          ],
          "payments":[
            {
              "account":{
                "type":"stripe",
                "buyer":{
                  "email":"joe@buystoomuchstuff.com",
                  "firstName":"",
                  "lastName":"",
                  "company":"Buys Too Much Stuff Dotcom",
                  "phone":"555-555-5555",
                  "notes":"non",
                  "address":{

                  }
                },
                "affirm":{

                },
                "stripe":{
                  "fingerprint":"k6NxwTEJxyHMPCr3",
                  "customerId":"cus_5vDNDt1Xi2YBBe",
                  "cardId":"card_15jMwmCSRlllXCwP3TSacP62",
                  "brand":"Visa",
                  "type":"credit",
                  "lastFour":"4242",
                  "expiration":{
                    "month":12,
                    "year":2016
                  },
                  "cvcCheck":"pass"
                },
              },
              "currency":"usd",
              "campaignId":"",
              "chargeId":"ch_15jMwqCSRlllXCwPpVNGPktU",
              "amount":2000,
              "amountRefunded":0,
              "status":"paid",
              "client":{

              },
              "captured":true,
              "live":false
            }
          ],
          "fulfillment":{
            "courier":"",
            "trackingNumber":""
          }
        }

## Two-step payment process, part 1 [/checkout/authorize]
The two-step payment process separates the two steps mentioned in the one-step
payment process, and allows you to authorize a payment, and then capture it at a
later period.  This is useful for pre-orders or other such payments that you do
not wish to collect until shipment.  The basic data needs remain the same, as
Hanzo implicitly creates the Order and User for you, for later use in the
capture portion.

### Authorize [POST]
+ Request (application/json)

        {
          "buyer":{
            "type":"card",
            "number":"4242424242424242",
            "month":"12",
            "year":"2016",
            "cvc":"123",
            "email":"joe@buystoomuchstuff.com",
            "firstName":"Joe",
            "lastName":"Smoe",
            "company":"Buys Too Much Stuff Dotcom",
            "phone":"555-555-5555",
            "notes":"non"
          },
          "order":{
            "currency":"usd",
            "items":[
              {
                "productId":"1",
                "variantId":"1",
                "collectionId":"1",
                "price":100,
                "quantity":20
              }
            ]
          }
        }

+ Response 200 (application/json)

        {
           "id":"12",
           "createdAt":"2015-03-23T04:53:57.840871693Z",
           "updatedAt":"2015-03-23T04:53:57.840871693Z",
           "campaignId":"",
           "orderStatus":"",
           "paymentStatus":"",
           "fulfillmentStatus":"",
           "preorder":false,
           "unconfirmed":false,
           "currency":"usd",
           "type":"",
           "shippingMethod":"",
           "lineTotal":2000,
           "discount":0,
           "subtotal":2000,
           "shipping":0,
           "tax":0,
           "total":2000,
           "balance":0,
           "paid":0,
           "refunded":0,
           "fee":0,
           "billingAddress":{

           },
           "shippingAddress":{

           },
           "items":[
              {
                 "productId":"1",
                 "productName":"",
                 "productSlug":"",
                 "collectionId":"1",
                 "variantId":"1",
                 "variantName":"",
                 "variantSKU":"",
                 "price":100,
                 "quantity":20,
                 "weight":0,
                 "taxable":false
              }
           ],
           "discounts":[],
           "payments":[
              {
                 "account":{
                    "type":"stripe",
                    "buyer":{
                       "email":"joe@buystoomuchstuff.com",
                       "firstName":"",
                       "lastName":"",
                       "company":"Buys Too Much Stuff Dotcom",
                       "phone":"555-555-5555",
                       "notes":"non",
                       "address":{

                       }
                    },
                    "affirm":{

                    },
                    "stripe":{
                       "fingerprint":"k6NxwTEJxyHMPCr3",
                       "customerId":"cus_5vE1sYKb8AayVC",
                       "cardId":"card_15jNZVCSRlllXCwPrD6GKV1j",
                       "brand":"Visa",
                       "type":"credit",
                       "lastFour":"4242",
                       "expiration":{
                          "month":12,
                          "year":2016
                       },
                       "cvcCheck":"pass"
                    },
                 },
                 "currency":"usd",
                 "campaignId":"",
                 "chargeId":"ch_15jNZZCSRlllXCwPWFblE4Hr",
                 "amount":2000,
                 "amountRefunded":0,
                 "status":"unpaid",
                 "client":{
                 },
                 "captured":false,
                 "live":false
              }
           ],
           "fulfillment":{
              "courier":"",
              "trackingNumber":""
           }
        }

## Group Two-step payment process, part 2 [/order/{id}/capture]
The second step of the two-step payment process involves capturing a
pre-authorized payment.  The order ID is required for this step, but it is
returned in the Authorize step (see above).

### Capture payment [POST]
+ Request (application/json)

+ Response 200 (application/json)

        {
          "id":"9",
          "createdAt":"2015-03-23T04:13:56.666272023Z",
          "updatedAt":"2015-03-23T04:13:58.989441381Z",
          "campaignId":"",
          "orderStatus":"",
          "paymentStatus":"",
          "fulfillmentStatus":"",
          "preorder":false,
          "unconfirmed":false,
          "currency":"usd",
          "type":"",
          "shippingMethod":"",
          "lineTotal":2000,
          "discount":0,
          "subtotal":2000,
          "shipping":0,
          "tax":0,
          "total":2000,
          "balance":0,
          "paid":0,
          "refunded":0,
          "fee":0,
          "billingAddress":{
          },
          "items":[
            {
              "productId":"1",
              "productName":"",
              "productSlug":"",
              "collectionId":"1",
              "variantId":"1",
              "variantName":"",
              "variantSKU":"",
              "price":100,
              "quantity":20,
              "weight":0,
              "taxable":false
            }
          ],
          "discounts":[],
          "payments":[
            {
              "account":{
                "type":"stripe",
                "buyer":{
                  "email":"joe@buystoomuchstuff.com",
                  "firstName":"",
                  "lastName":"",
                  "company":"Buys Too Much Stuff Dotcom",
                  "phone":"555-555-5555",
                  "notes":"non",
                  "address":{}
                },
                "affirm":{},
                "stripe":{
                  "fingerprint":"k6NxwTEJxyHMPCr3",
                  "customerId":"cus_5vDNDt1Xi2YBBe",
                  "cardId":"card_15jMwmCSRlllXCwP3TSacP62",
                  "brand":"Visa",
                  "type":"credit",
                  "lastFour":"4242",
                  "expiration":{
                    "month":12,
                    "year":2016
                  },
                  "cvcCheck":"pass"
                },
              },
              "currency":"usd",
              "campaignId":"",
              "chargeId":"ch_15jMwqCSRlllXCwPpVNGPktU",
              "amount":2000,
              "amountRefunded":0,
              "status":"paid",
              "client":{

              },
              "captured":true,
              "live":false
            }
          ],
          "fulfillment":{
            "courier":"",
            "trackingNumber":""
          }
        }

# Group Coupon
This object is a representation of special offers that provide discounts
associated with a certain order or item.

| Field Name | Field Description                                                                                                                                                                                           | Type   |
| ---------- | -----------------                                                                                                                                                                                           | ----   |
| name       | The public moniker for the coupon.                                                                                                                                                                          | string |
| type       | A category for the coupon.  Possible values are: 'flat' (for a certain number of cents off), 'percent' (for a percentage of the total as a discount), and 'free_shipping' (exemption from shipping charges) | string |
| code       | A unique identifier for this coupon for internal use.                                                                                                                                                       | string |
| campaignId | The specific campaign this coupon is valid for.                                                                                                                                                             | string |
| startDate  | Combined with EndDate, this denotes the time span the coupon is valid for.                                                                                                                                  | string |
| endDate    | Combined with StartDate, this denotes the time span the coupon is valid for.                                                                                                                                | string |
| filter     | The scope the coupon applies to.  Possible values are 'order' and 'product'                                                                                                                                 | string |
| once       | A flag indicating whether to apply the coupon once, or every time it is valid.                                                                                                                              | bool   |
| productId  | The specific ID of the product this coupon applies to, if applicable.                                                                                                                                       | string |
| enabled    | A flag indicating whether or not the coupon is currently valid.                                                                                                                                             | bool   |
| amount     | The numerical value attached to the coupon.  'Flat' coupons should be in cents (500 for $5), while 'percent' coupons should be in percentage points (10 for 10%). Unneeded for 'free_shipping' coupons.     | int    |
| used       | How many times this coupon has been redeemed.                                                                                                                                                               | bool   |

## Calls related to Coupons [/coupon/{id}]
Basic Coupon calls are keyed upon the unique ID of the Coupon.  As with all
calls, it also requires an access key included with the request.

### Get a Coupon [GET]
+ Response 200 (application/json)

        {
            "name": "10% off teh nooest shirt!",
            "type": "percent",
            "code": "WIOFJ23948",
            "campaignId": "1",
            "startDate": "04-30-2025 12:34:23",
            "endDate": "05-23-2025 02:24:55",
            "filter": "product",
            "once": true,
            "productId": "1",
            "enabled": true,
            "amount": 10,
            "used": 249
        }

### Create a Coupon [POST]
+ Request (application/json)

        {
            "name": "10% off teh nooest shirt!",
            "type": "percent",
            "code": "WIOFJ23948",
            "campaignId": "1",
            "startDate": "04-30-2025 12:34:23",
            "endDate": "05-23-2025 02:24:55",
            "filter": "product",
            "once": true,
            "productId": "1",
            "enabled": true,
            "amount": 10,
            "used": 249
        }

+ Response 200 (application/json)

        {
            "id": "43",
            "createdAt": "2015-03-23T04:13.56.666272023Z",
            "updatedAt": "2015-03-23T04:13.56.666272023Z",
            "name": "10% off teh nooest shirt!",
            "type": "percent",
            "code": "WIOFJ23948",
            "campaignId": "1",
            "startDate": "04-30-2025 12:34:23",
            "endDate": "05-23-2025 02:24:55",
            "filter": "product",
            "once": true,
            "productId": "1",
            "enabled": true,
            "amount": 10,
            "used": 249
        }

### Deleting a Coupon [DELETE]
Deleting a Coupon is as simple as passing its ID to the Coupon endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
204.

+ Response 204 (application/json)

### Updating a Coupon [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid Coupon JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a Coupon [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion.  Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

# Group Collection
This object is a representation of a bundle of [Products](#product) and/or
[Variants](#variant), sold as a single unit.

| Field Name   | Field Description                                                                                                 | Type                          |
| ----------   | -----------------                                                                                                 | ----                          |
| slug         | The unique, human-readable identifier.                                                                            | string                        |
| name         | The name of the collection.                                                                                       | string                        |
| description  | The long-form explanation of the Collection.                                                                      | string                        |
| media        | Images, videos, etc to show off in a gallery.                                                                     | [[]Media](#media)             |
| available    | A flag denoting whether or not the bundle can be purchased.                                                       | bool                          |
| availability | A date range over which the collection is available.  If this is not null, it overrides the 'available' property. | [Availability](#availability) |
| published    | A flag denoting whether or not this should be shown in the store.                                                 | bool                          |
| preorder     | A flag denoting whether or not this is a preorder collection (as opposed to ready for immediate shipment).        | bool                          |
| outOfStock   | A flag denoting whether or not any of these collections are stocked properly.                                     | bool                          |
| productIds   | A list of products that are associated with this collection.                                                      | []string                      |
| variantIds   | A list of variants that are associated with this collection.                                                      | []string                      |

## Calls related to Collections [/collection/{id}]
Basic Collection calls are keyed to the unique ID of the collection.  As with
all calls, it also requires an API key to be included with the request.

### Get a Collection [GET]
+ Response 200 (application/json)

        {
          "id": "aJpS06tepV",
          "createdAt": "2015-04-27T00:29:31.56072Z",
          "updatedAt": "2015-04-27T00:29:31.564548Z",
          "slug": "such-tees-pack",
          "name": "Such tees pack",
          "description": "Much tees in one pack!",
          "media": null,
          "available": true,
          "availability": {
            "active": false,
            "startDate": "0001-01-01T00:00:00Z",
            "endDate": "0001-01-01T00:00:00Z"
          },
          "published": true,
          "preorder": false,
          "outOfStock": false,
          "productIds": null,
          "variantIds": null,
          "history": null
        }

### Create a Collection [POST]
+ Request (application/json)

        {
          "slug": "such-tees-pack",
          "name": "Such tees pack",
          "description": "Much tees in one pack!",
          "available": true,
          "availability": {
            "active": false,
            "startDate": "0001-01-01T00:00:00Z",
            "endDate": "0001-01-01T00:00:00Z"
          },
          "published": true,
          "preorder": false,
          "outOfStock": false,
        }

+ Response 200 (application/json)

        {
          "id": "aJpS06tepV",
          "createdAt": "2015-04-27T00:29:31.56072Z",
          "updatedAt": "2015-04-27T00:29:31.564548Z",
          "slug": "such-tees-pack",
          "name": "Such tees pack",
          "description": "Much tees in one pack!",
          "media": null,
          "available": true,
          "availability": {
            "active": false,
            "startDate": "0001-01-01T00:00:00Z",
            "endDate": "0001-01-01T00:00:00Z"
          },
          "published": true,
          "preorder": false,
          "outOfStock": false,
          "productIds": null,
          "variantIds": null,
          "history": null
        }

### Deleting a Collection [DELETE]
Deleting a Collection is as simple as passing its ID to the Collection endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
204.

+ Response 204 (application/json)

### Updating a Collection [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid Collection JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a Collection [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion.  Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

# Group Form
This object represents your list of email subscribers, and a number of settings
related to interacting with them.

| Field Name  | Field Description                                                                                | Type                    |
| ----------  | -----------------                                                                                | ----                    |
| name        | The human-readable name for this list.                                                           | string                  |
| sendWelcome | A flag indicating whether or not Hanzo sends an email confirmation to someone upon joining. | bool                    |
| mailchimp   | A sub-object containing mailchimp settings for this list.                                        | [Mailchimp](#mailchimp) |
| thankYou    | A sub-object containing information for a thank-you page on this list.                           | [ThankYou](#thankyou)   |
| facebook    | A sub-object containing information for conversion tracking on Facebook.                         | [Facebook](#facebook)   |
| google      | A sub-object containing information for conversion tracking with Google.                         | [Google](#google)       |

## Calls related to Forms [/form/{id}]
Basic Form calls are keyed to the unique ID of the form.  As with
all calls, it also requires an API key to be included with the request.

### Get a Form [GET]
+ Response 200 (application/json)

        {
          "id": "JLnDuXu4M6",
          "createdAt": "2015-04-27T01:15:33.113334Z",
          "updatedAt": "2015-04-27T01:15:33.113334Z",
          "name": "Teh Nooest Mailing List!",
          "type": "subscribe",
          "sendWelcome": true,
          "mailchimp": {
            "id": "aowieij",
            "enabled": true,
            "apiKey": "23098fIOWJEOIJFW",
            "doubleOptin": false,
            "replaceInterests": true,
            "sendWelcome": false,
            "updateExisting": true
          },
          "forward": {
              "name": "Such Owner",
              "email": "info@suchtees.com",
              "enabled": true
          },
          "thankyou": {
            "type": "redirect",
            "url": "http://suchtees.com/thanks/"
          },
          "facebook": {
            "id": "6024480985959",
            "value": "0.00",
            "currency": "USD"
          },
          "google": {
            "category": "Subscription",
            "name": "T-Shirt List Sign-up"
          }
        }

### Create a Form [POST]
+ Request (application/json)

        {
          "name": "Teh Nooest Mailing List!",
          "type": "subscribe",
          "sendWelcome": true,
          "mailchimp": {
            "id": "aowieij",
            "apiKey": "23098fIOWJEOIJFW",
            "doubleOptin": false,
            "updateExisting": true,
            "replaceInterests": true,
            "sendWelcome": false,
            "enabled": true
          },
          "thankyou": {
            "type": "redirect",
            "url": "http://suchtees.com/thanks/"
          },
          "facebook": {
            "id": "6024480985959",
            "value": "0.00",
            "currency": "USD"
          },
          "google": {
            "category": "Subscription",
            "name": "T-Shirt List Sign-up"
          }
        }

+ Response 200 (application/json)

        {
          "id": "JLnDuXu4M6",
          "createdAt": "2015-04-27T01:15:33.113334Z",
          "updatedAt": "2015-04-27T01:15:33.113334Z",
          "name": "Teh Nooest Mailing List!",
          "type": "subscribe",
          "sendWelcome": true,
          "mailchimp": {
            "id": "aowieij",
            "apiKey": "23098fIOWJEOIJFW",
            "doubleOptin": false,
            "updateExisting": true,
            "replaceInterests": true,
            "sendWelcome": false,
            "enabled": true
          },
          "thankyou": {
            "type": "redirect",
            "url": "http://suchtees.com/thanks/"
          },
          "facebook": {
            "id": "6024480985959",
            "value": "0.00",
            "currency": "USD"
          },
          "google": {
            "category": "Subscription",
            "name": "T-Shirt List Sign-up"
          }

### Deleting a Form [DELETE]
Deleting a Form is as simple as passing its ID to the Form endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
204.

+ Response 204 (application/json)

### Updating a Form [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid Form JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a Form [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion. Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

## Calls related to Form submission [/form/{id}/submit]

### Submitting a Form [POST]
+ Request (application/json)

        {
          "name": "Such Fan",
          "email" "suchfan@gmail.com"
        }

+ Response 201 (application/json)

# Group Order

This object is a representation of a user's **completed purchase**.  The order should not be
confused with a [Cart](#cart), which are prospective purchases.

| Field Name        | Field Description                                                                                                                                                                  | Type                    |
| ----------        | -----------------                                                                                                                                                                  | ----                    |
| createdAt         | The time the order first came to be.                                                                                                                                               | string                  |
| updatedAt         | The time the order was last modified (not necessarily by the user).                                                                                                                | string                  |
| id                | The internal unique identifier for this order.                                                                                                                                     | string                  |
| userId            | The identifier for the user who placed this order.                                                                                                                                 | string                  |
| status            | A report of the current state of the order.  Potential states are 'cancelled', 'completed', 'locked', 'on-hold', and 'open'.                                                       | string                  |
| paymentStatus     | A report of the state of the payment associated with the order.  Potential states are 'cancelled', 'credit', 'disputed', 'failed', 'fraudulent', 'paid', 'refunded', and 'unpaid'. | string                  |
| fulfillmentStatus | A report of the state of the fulfillment/delivery of this order.  Potentail states are 'unfulfilled', 'shipped', 'processing', and 'cancelled'                                     | string                  |
| currency          | The 3-letter ISO currency code for the currency used on this order. Uses lowercase.                                                                                                | string                  |
| coupons           | A list of the special offers used on this order.                                                                                                                                   | [[]coupon](#coupon)     |
| couponCodes       | An easily digestable list of the unique codes for the special offer list above.                                                                                                    | []string                |
| paymentIds        | A list of recorded payments to this order.  These ids coincide with the id field in the [Payment] object.                                                                          | []string                |
| fulfillment       | An object containing data for the shipment of the order to the buyer.                                                                                                              | [fulfillment]           |
| lineTotal         | The sum of all line item amounts, in the most basic unit (such as cents), as defined by Currency.                                                                                  | int64                   |
| shipping          | Charges for mailing the order in cents                                                                                                                                             | int64                   |
| tax               | Charges on the order levied by any relevant governments in cents                                                                                                                   | int64                   |
| discount          | Discount amount applied to the order, in the most basic unit (such as cents) as defined by the Currency.                                                                           | int64                   |
| subtotal          | Charges from actual purchases in the most basic unit (such as cents) as defined by the Currency, less any discounts.                                                               | int64                   |
| total             | Net charge to be sent to the client cents. Includes Subtotal, Tax, and Shipping.                                                                                                   | int64                   |
| balance           | The net amount owed to the seller, in the currency's basic unit (such as cents).                                                                                                   | int64                   |
| paid              | The amount currently paid to the seller, in the currency's basic unit (such as cents)                                                                                              | int64                   |
| refunded          | The amount refunded to the customer, in the currency's basic unit (such as cents)                                                                                                  | int64                   |
| items             | A list of LineItems that comprise this order.                                                                                                                                      | [[]lineitem](#lineitem) |
| campaignId        | The unique identifier for the fundraising campaign that spawned this order (if applicable)                                                                                         | string                  |
| storeId           | The unique identifier for the specific store that spawned this order (if applicable)                                                                                               | string                  |
| preorder          | A switch indicating whether or not this is a preorder.                                                                                                                             | bool                    |
| cancelled         | A switch indicating whether or not this order has been cancelled.                                                                                                                  | bool                    |
| shipped           | A switch indicating whether or not this order has been shipped.                                                                                                                    | bool                    |
| test              | A switch indicating whether or not this is a test order.                                                                                                                           | bool                    |
| unconfirmed       | A switch indicating whether or not all details are confirmed. If false, most often the user has not declared precise order variant options.                                        | bool                    |
| type              | This is a payment processor type, such as Stripe (for credit card payments), PayPal (for escrow payments), etc.                                                                    | string                  |

## Calls related to Orders [/order/{id}]
Basic Order calls are keyed upon the unique ID of the Order.  As with all calls,
it also requires an access key included with the request.

### Get an Order [GET]
+ Response 200 (application/json)

        {
          "createdAt": "04-30-2025 12:34:23",
          "updatedAt": "05-23-2025 02:24:55",
          "id":        "VIJij32309JVOIWJWE",
          "userId":    "jdoe",
          "shipping":  300,
          "tax":       0,
          "subtotal":  1000,
          "total":     1300,
          "items": [
            {
              "productId": "SLD32diiSJ9293",
              "productName": "Teh Nooest Meme T-Shirt",
              "productSlug": "t-shirt",
              "variantId": "FOIUVMOIS872348OIJDFWOIJ",
              "variantSKU": "T-SHIRT-M",
              "price": 1000,
              "quantity": 1,
              "weight": 11,
              "taxable": true
            }
          ],
          "campaignId": "WVEIOJ124902AIOJFJL",
          "preorder":   true,
          "cancelled":  false,
          "shipped":    false,
          "test":       false
        }

### Create an Order [POST]
+ Request (application/json)

        {
          "userId":    "jdoe",
          "shipping":  300,
          "tax":       0,
          "subtotal":  1000,
          "total":     1300,
          "items": [
            {
              "productId": "SLD32diiSJ9293",
              "productName": "Teh Nooest Meme T-Shirt",
              "productSlug": "t-shirt",
              "variantId": "FOIUVMOIS872348OIJDFWOIJ",
              "variantSKU": "T-SHIRT-M",
              "price": 1000,
              "quantity": 1,
              "weight": 11,
              "taxable": true
            }
          ],
          "campaignId": "WVEIOJ124902AIOJFJL",
          "preorder":   true,
          "cancelled":  false,
          "shipped":    false,
          "test":       false
        }

+ Response 200 (application/json)

        {
          "createdAt": "04-30-2025 12:34:23",
          "updatedAt": "05-23-2025 02:24:55",
          "id":        "VIJij32309JVOIWJWE",
          "userId":    "jdoe",
          "shipping":  300,
          "tax":       0,
          "subtotal":  1000,
          "total":     1300,
          "items": [
            {
              "productId": "SLD32diiSJ9293",
              "productName": "Teh Nooest Meme T-Shirt",
              "productSlug": "t-shirt",
              "variantId": "FOIUVMOIS872348OIJDFWOIJ",
              "variantSKU": "T-SHIRT-M",
              "price": 1000,
              "quantity": 1,
              "weight": 11,
              "taxable": true
            }
          ],
          "campaignId": "WVEIOJ124902AIOJFJL",
          "preorder":   true,
          "cancelled":  false,
          "shipped":    false,
          "test":       false
        }

### Deleting a Order [DELETE]
Deleting a Order is as simple as passing its ID to the Order endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
200.

+ Response 204 (application/json)

### Updating a Order [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid Order JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a Order [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion.  Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

## Payments on an Order [/order/{id}/payments]
It is possible to get a listing of all the payments on a specific order with
this endpoint.

### Get Payments on an Order [GET]
+ Response 200 (application/json)

        {
         "account":{
            "type":"stripe",
            "buyer":{
               "email":"joe@buystoomuchstuff.com",
               "firstname":"",
               "lastname":"",
               "company":"buys too much stuff dotcom",
               "phone":"555-555-5555",
               "notes":"non",
               "address":{}
            },
            "stripe":{
               "fingerprint":"k6nxwtejxyhmpcr3",
               "customerid":"cus_5ve1sykb8aayvc",
               "cardid":"card_15jnzvcsrlllxcwprd6gkv1j",
               "brand":"visa",
               "type":"credit",
               "lastfour":"4242",
               "expiration":{
                  "month":12,
                  "year":2016
               },
               "cvccheck":"pass"
            },
         },
         "currency":"usd",
         "campaignid":"",
         "chargeid":"ch_15jnzzcsrlllxcwpwfble4hr",
         "amount":2000,
         "amountrefunded":0,
         "status":"unpaid",
         "client":{

         },
         "captured":false,
         "live":false
        }

# Group Referral

This represents an [Order](#order) that happened because of the intervention of
a specific [User](#user).

| Field Name     | Field Description                                                               | Type   |
| ----------     | -----------------                                                               | ----   |
| userId         | The identifier for the [User](#user) that made a purchase.                      | string |
| orderId        | The identifier for the [Order](#order) that happened because of the referral.   | string |
| referrerUserId | The identifier for the [User](#user) that induced the purchase.                 | string |
| referrerId     | The identifier for the [Referrer](#referrer) that this referral is credited to. | string |

## Calls related to Referrals [/referral/{id}]
Basic Referral calls are keyed upon the unique ID of the Referral.  As with all
calls, it also requires an access key included with the request.

### Get a Referral [GET]
+ Response 200 (application/json)

        {
          "id": "M6rsDDXCXM",
          "createdAt": "2015-11-27T00:27:46.91231Z",
          "updatedAt": "2015-11-27T00:27:46.915169Z",
          "userId": "lVg6HluKM4",
          "orderId": "VdNi66rHwa",
          "referrerUserId": "",
          "referrerId": ""
        }

### Creating a Referral [POST]
+ Request (application/json)

        {
          "userId": "lVg6HluKM4",
          "orderId": "VdNi66rHwa",
          "referrerUserId": "",
          "referrerId": ""
        }

+ Response 200 (application/json)

        {
          "id": "M6rsDDXCXM",
          "createdAt": "2015-11-27T00:27:46.91231Z",
          "updatedAt": "2015-11-27T00:27:46.915169Z",
          "userId": "lVg6HluKM4",
          "orderId": "VdNi66rHwa",
          "referrerUserId": "",
          "referrerId": ""
        }

### Deleting a Referral [DELETE]
Deleting a Referral is as simple as passing its ID to the Referral endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
200.

+ Response 204 (application/json)

### Updating a Referral [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid Referral JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a Referral [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion.  Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

# Group Referrer

This represents a [User](#User) that has induced an [Order](#order) to be
placed. As merchants, we generally want to encourage that, so we try to make it
easy for you to set up [Programs](#Program) to encourage it to happen.

| Field Name     | Field Description                                                                   | Type                          |
| ----------     | -----------------                                                                   | ----                          |
| program        | The referral offer this referrer is participating in.                               | [Program](#program)           |
| orderId        | The order ID that is affected by the program's perks.                               | string                        |
| userId         | The identifier for the user that is doing all the referring.                        | string                        |
| referralIds    | A list of [Referral](#referral) identifiers that this referrer has generated.       | []string                      |
| transactionIds | A list of [Transaction](#transaction) identifiers that this referrer has generated. | []string                      |
| transactions   | A list of [Transactions](#transaction) that this referrer has generated.            | [[]Transaction](#transaction) |

## Calls related to Referrers [/referrer/{id}]
Basic Referrer calls are keyed upon the unique ID of the Referrer.  As with all
calls, it also requires an access key included with the request.

### Get a Referrer [GET]
+ Response 200 (application/json)

        {
          "id": "VmWFkkxhKa",
          "createdAt": "2015-11-27T00:28:33.233939Z",
          "updatedAt": "2015-11-27T00:28:33.236821Z",
          "program": {
            "name": "",
            "triggers": [
              0
            ],
            "actions": [
              {
                "type": "Credit",
                "currency": "usd",
                "amount": 1000
              }
            ]
          },
          "orderId": "VdNi66rHwa",
          "userId": "lVg6HluKM4",
          "referralIds": null,
          "transactionsIds": null
        }

### Creating a Referrer [POST]
+ Request (application/json)

        {
          "program": {
            "name": "",
            "triggers": [
              0
            ],
            "actions": [
              {
                "type": "Credit",
                "currency": "usd",
                "amount": 1000
              }
            ]
          },
          "orderId": "VdNi66rHwa",
          "userId": "lVg6HluKM4",
          "referralIds": null,
          "transactionsIds": null
        }

+ Response 200 (application/json)

        {
          "id": "VmWFkkxhKa",
          "createdAt": "2015-11-27T00:28:33.233939Z",
          "updatedAt": "2015-11-27T00:28:33.236821Z",
          "program": {
            "name": "",
            "triggers": [
              0
            ],
            "actions": [
              {
                "type": "Credit",
                "currency": "usd",
                "amount": 1000
              }
            ]
          },
          "orderId": "VdNi66rHwa",
          "userId": "lVg6HluKM4",
          "referralIds": null,
          "transactionsIds": null
        }

### Deleting a Referrer [DELETE]
Deleting a Referrer is as simple as passing its ID to the Referrer endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
200.

+ Response 204 (application/json)

### Updating a Referrer [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid Referrer JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a Referrer [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion.  Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

# Group Transaction

This represents movement of value inside of your store/organization.  It can
help you keep track of things like restocking charges for returns, or customer
service and referral credits.  It differs from a [Payment](#payment) in that
it's all internal - think of these as store credit/charges, as opposed to actual
cash events.

| Field Name | Field Description                                                              | Type   |
| ---------- | -----------------                                                              | ----   |
| userId     | The identifier for the [User](#user) affected by this transaction.             | string |
| type       | The basic variety of transaction.  Can be 'deposit' or 'withdraw'.             | string |
| currency   | The 3-digit currency identifier, such as 'usd' or 'gbp'.  Always in lowercase. | string |
| amount     | The size of the transaction, in the most basic currency unit (such as cents).  | int64  |
| test       | A flag showing whether or not this is was a test.                              | bool   |

## Calls related to Transaction [/transaction/{id}]
The only basic call related to Transactions is keyed upon the unique identifier
for the transaction. As with all calls, it also requires an access key to be
included with the request.

### Get a Transaction [GET]
This is the only call that is available for Transactions, as they are too
directly sensitive to allow to be modified.

+ Response 200 (application/json)

        {
          "id": "Mkei8xdCpL",
          "createdAt": "2015-11-27T04:14:00.361654Z",
          "updatedAt": "2015-11-27T04:14:00.369243Z",
          "userId": "lVg6HluKM4",
          "type": "deposit",
          "currency": "usd",
          "amount": 1000,
          "test": false,
          "notes": "",
          "tags": "",
          "sourceId": "",
          "sourceKind": ""
        }


# Group Product

This represents a single product (or, perk, if intangible) that is offered by a
campaign.

| Field Name  | Field Description                                                                                                                                       | Type                         |
| ----------  | -----------------------------------------------------------                                                                                             | ------                       |
| id          | The unique internal identifier for this product.                                                                                                        | string                       |
| slug        | The friendly Url representation (such as whizbang-200).                                                                                                 | string                       |
| sku         | The unique external identifier for this product.                                                                                                        | string                       |
| currency    | The 3-letter ISO currency code, such as 'usd' or 'gbp'.  Always returned in lowercase.                                                                  | string                       |
| price       | How much the product costs, in the most basic currency unit (such as cents for usd).                                                                    | int64                        |
| listPrice   | How much the product is currently listed for, so you can display that something is discounted.  Listed in the most basic currency unit (such as cents). | int64                        |
| shipping    | The basic cost for shipping this product, in the most basic currency unit (such as cents).                                                              | int64                        |
| inventory   | How many of the product is in stock.                                                                                                                    | int64                        |
| weight      | The measurement of the product's mass.                                                                                                                  | float                        |
| weightUnit  | The unit used in weight. Supported units are 'lb', 'oz', 'kg', and 'g'.                                                                                 | string                       |
| dimensions  | A free-form representation of the dimensions of the product. Units are not included, so be sure to include it yourself.                                 | string                       |
| taxable     | A switch denoting if the object is subject to tax.                                                                                                      | bool                         |
| title       | The top-level title of this product (such as Whizbang 2000).                                                                                            | string                       |
| headline    | The most important one-liner regarding the product.                                                                                                     | string                       |
| excerpt     | A short paragraph explaining the product.                                                                                                               | string                       |
| description | The long form explanation of the product.                                                                                                               | string                       |
| released    | The time associated with the product's release.                                                                                                         | string                       |
| available   | A switch indicating whether or not the product is available.                                                                                            | bool                         |
| addLabel    | The text used when staging the product for purchase.                                                                                                    | string                       |
| headerImage | An image used as the primary representation of the product.                                                                                             | [Media](#media)              |
| media       | A set of Media resources representing the product.  Does not include headerImage.                                                                       | [[]Media](#media)            |
| variants    | A listing of variations of the same product, such as different sizes or different offered colors.                                                       | [[]ProductVariant](#variant) |

## Calls related to Products [/product/{id}]
Basic Product calls are keyed upon the unique ID of the Product.  As with all
calls, it also requires an access key included with the request.

### Get a Product [GET]
+ Response 200 (application/json)

        {
          "id": "SLD32diiSJ9293",
          "slug": "t-shirt",
          "title": "Teh Nooest Meme T-shirt!",
          "headline": "Teh Nooest Meme, now for your chest (and/or face)!",
          "excerpt": "Available in from sizes Much to Wow!",
          "description": "Teh Nooest Meme, the funniest meme ever!  Now on your chest!",
          "released": "01-21-2025 03:08:32",
          "available": true,
          "addLabel": "Pre-order now!",
          "headerImage": {
            "type": "image",
            "alt": "wow",
            "url": "http://suchtees.com/media/top/1.jpg",
            "x": 400,
            "y": 100
          },
          "media": [
            {
              "type": "image",
              "alt": "such tee",
              "url": "http://suchtees.com/media/top/2.jpg",
              "x": 400,
              "y": 100
            },
            {
              "type": "image",
              "alt": "much cloth",
              "url": "http://suchtees.com/media/top/3.jpg",
              "x": 200,
              "y": 150
            }
          ],
          "variants": [
            {
              "id": "FOIUVMOIS872348OIJDFWOIJ",
              "sku": "T-SHIRT-M",
              "price": 1000,
              "stock": 30,
              "weight": 11,
              "dimensions": "5x5x5",
              "options": {
                "size": "much"
              }
            },
            {
              "id": "FOIUVMOIS872348OIJDFWOIJ",
              "sku": "T-SHIRT-W",
              "price": 1000,
              "stock": 33,
              "weight": 12,
              "dimensions": "6x6x6",
              "options": {
                "size": "wow"
              }
            },
          ]
        }

### Creating a Product [POST]
+ Request (application/json)

        {
          "slug": "t-shirt",
          "title": "Teh Nooest Meme T-shirt!",
          "headline": "Teh Nooest Meme, now for your chest (and/or face)!",
          "excerpt": "Available in from sizes Much to Wow!",
          "description": "Teh Nooest Meme, the funniest meme ever!  Now on your chest!",
          "released": "01-21-2025 03:08:32",
          "available": true,
          "addLabel": "Pre-order now!",
          "headerImage": {
            "type": "image",
            "alt": "wow",
            "url": "http://suchtees.com/media/top/1.jpg",
            "x": 400,
            "y": 100
          },
          "media": [
            {
              "type": "image",
              "alt": "such tee",
              "url": "http://suchtees.com/media/top/2.jpg",
              "x": 400,
              "y": 100
            },
            {
              "type": "image",
              "alt": "much cloth",
              "url": "http://suchtees.com/media/top/3.jpg",
              "x": 200,
              "y": 150
            }
          ],
          "variants": [
            {
              "id": "FOIUVMOIS872348OIJDFWOIJ",
              "sku": "T-SHIRT-M",
              "price": 1000,
              "stock": 30,
              "weight": 11,
              "dimensions": "5x5x5",
              "options": {
                "size": "much"
              }
            },
            {
              "id": "FOIUVMOIS872348OIJDFWOIJ",
              "sku": "T-SHIRT-W",
              "price": 1000,
              "stock": 33,
              "weight": 12,
              "dimensions": "6x6x6",
              "options": {
                "size": "wow"
              }
            },
          ]
        }

+ Response 200 (application/json)

        {
          "id": "SLD32diiSJ9293",
          "createdAt": "2015-03-23T04:13.56.666272023Z",
          "updatedAt": "2015-03-23T04:13.56.666272023Z",
          "slug": "t-shirt",
          "title": "Teh Nooest Meme T-shirt!",
          "headline": "Teh Nooest Meme, now for your chest (and/or face)!",
          "excerpt": "Available in from sizes Much to Wow!",
          "description": "Teh Nooest Meme, the funniest meme ever!  Now on your chest!",
          "released": "01-21-2025 03:08:32",
          "available": true,
          "addLabel": "Pre-order now!",
          "headerImage": {
            "type": "image",
            "alt": "wow",
            "url": "http://suchtees.com/media/top/1.jpg",
            "x": 400,
            "y": 100
          },
          "media": [
            {
              "type": "image",
              "alt": "such tee",
              "url": "http://suchtees.com/media/top/2.jpg",
              "x": 400,
              "y": 100
            },
            {
              "type": "image",
              "alt": "much cloth",
              "url": "http://suchtees.com/media/top/3.jpg",
              "x": 200,
              "y": 150
            }
          ],
          "variants": [
            {
              "id": "FOIUVMOIS872348OIJDFWOIJ",
              "sku": "T-SHIRT-M",
              "price": 1000,
              "stock": 30,
              "weight": 11,
              "dimensions": "5x5x5",
              "options": {
                "size": "much"
              }
            },
            {
              "id": "FOIUVMOIS872348OIJDFWOIJ",
              "sku": "T-SHIRT-W",
              "price": 1000,
              "stock": 33,
              "weight": 12,
              "dimensions": "6x6x6",
              "options": {
                "size": "wow"
              }
            },
          ]
        }

### Deleting a Product [DELETE]
Deleting a Product is as simple as passing its ID to the Product endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
200.

+ Response 204 (application/json)

### Updating a Product [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid Product JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a Product [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion.  Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

# Group Variant
The Variant object signifies specifics about an individual kind of Product.

| Field Name   | Field Description                                                                                                                       | Type                          |
| ----------   | -----------------                                                                                                                       | ----                          |
| id           | The unique internal identifier for this variant.                                                                                        | string                        |
| sku          | The unique external product identifier for this variant (helps with fulfillment)                                                        | string                        |
| productId    | The identifier for the product that this variant is a variant of.                                                                       | string                        |
| name         | Display name for this variant.                                                                                                          | string                        |
| currency     | The 3-letter ISO currency code, such as 'usd' or 'gbp'.  Always returned in lowercase.                                                  | string                        |
| price        | The price of this variant in cents.                                                                                                     | int64                         |
| available    | A switch denoting whether or not this product is available.                                                                             | bool                          |
| availability | A date range in which the variant is available.  If set, it overrides the 'available' bool.                                             | [availability](#availability) |
| inventory    | How many of the variant are currently in stock.                                                                                         | int                           |
| sold         | How many of this variant has been sold.                                                                                                 | int64                         |
| weight       | How much the variant masses in its given unit.                                                                                          | float                         |
| weightUnit   | The unit used in weight. Supported units are 'lb', 'oz', 'kg', and 'g'.                                                                 | string                        |
| dimensions   | The height by width by depth of the variant, physically. Typically in inches, but handles metric measurements fine with consistent use. | string                        |
| options      | Potential elections for the variant, such as size for a shirt.                                                                          | [[]Option](#option)           |

# Calls related to Variants [/variant/{id}]
Basic Variant calls are keyed upon the unique ID of the Variant.  As with all
calls, it also requires an access key included with the request.

### Get a Variant [GET]
+ Response 200 (application/json)

        {
          "id": "FOIUVMOIS872348OIJDFWOIJ",
          "createdAt": "2015-03-23T04:13.56.666272023Z",
          "updatedAt": "2015-03-23T04:13.56.666272023Z",
          "sku": "T-SHIRT-M",
          "price": 1000,
          "inventory": 30,
          "weight": 11,
          "dimensions": "5x5x5",
          "options": {
            "size": "much"
          }
        }

### Create a Variant [POST]
+ Request (application/json)

        {
          "sku": "T-SHIRT-M",
          "price": 1000,
          "inventory": 30,
          "weight": 11,
          "dimensions": "5x5x5",
          "options": {
            "size": "much"
          }
        }

+ Response 200 (application/json)

        {
          "id": "FOIUVMOIS872348OIJDFWOIJ",
          "createdAt": "2015-03-23T04:13.56.666272023Z",
          "updatedAt": "2015-03-23T04:13.56.666272023Z",
          "sku": "T-SHIRT-M",
          "price": 1000,
          "inventory": 30,
          "weight": 11,
          "dimensions": "5x5x5",
          "options": {
            "size": "much"
          }
        }

### Deleting a Variant [DELETE]
Deleting a Variant is as simple as passing its ID to the Variant endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
200.

+ Response 204 (application/json)

### Updating a Variant [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid Variant JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a Variant [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion.  Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

# Group User

| Field Name      | Field Description                                                                         | Type                    |
| ----------      | -----------------                                                                         | ----                    |
| createdAt       | The time the user first came to be.                                                       | string                  |
| updatedAt       | The time the user was last modified (not necessarily by the user).                        | string                  |
| id              | The internal unique identifier.                                                           | string                  |
| username        | The username for this user.                                                               | string                  |
| firstName       | The first name for this user.                                                             | string                  |
| lastName        | The last name for this user.                                                              | string                  |
| company         | The company associated with the user (in the case of a rep with purchase order authority) | string                  |
| phone           | The phone for this user.                                                                  | string                  |
| billingAddress  | The billing address for this user.                                                        | string                  |
| shippingAddress | The shipping address for this user.                                                       | string                  |
| email           | The email for this user.                                                                  | string                  |
| payPalEmail     | The email used for the paypal account attached to this user.                              | string                  |
| enabled         | Whether or not the user can log in.                                                       | bool                    |
| referrals       | A list of referrals that this user has generated.                                         | [[]referral(#referral)] |
| referrers       | A list of referrers this user has been referred by.                                       | [[]referrer](#referrer) |

## Calls relating to Users [/user/{id}]
Basic User calls are keyed upon the unique ID of the User.  As with all calls,
it also requires an access key included with the request.

### Get a User [GET]
+ Response 200 (application/json)

        {
          "id": "KawefZu3VY",
          "createdAt": "2015-03-23T14:44:46.215269Z",
          "updatedAt": "2015-03-23T14:44:46.597388Z",
          "username": "",
          "firstName": "",
          "lastName": "",
          "phone": "",
          "billingAddress": {},
          "shippingAddress": {},
          "email": "admin@suchtees.com"
        }

### Create a User [POST]
+ Request (application/json)

        {
          "username": "",
          "firstName": "",
          "lastName": "",
          "phone": "",
          "billingAddress": {},
          "shippingAddress": {},
          "email": "admin@suchtees.com"
        }

+ Response 200 (application/json)

        {
          "id": "KawefZu3VY",
          "createdAt": "2015-03-23T14:44:46.215269Z",
          "updatedAt": "2015-03-23T14:44:46.597388Z",
          "username": "",
          "firstName": "",
          "lastName": "",
          "phone": "",
          "billingAddress": {},
          "shippingAddress": {},
          "email": "admin@suchtees.com"
        }

### Deleting a User [DELETE]
Deleting a User is as simple as passing its ID to the User endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
200.

+ Response 204 (application/json)

### Updating a User [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid User JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a User [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion.  Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

# Group Site
| Field Name        | Field Description                                                                                      | Type   |
| ----------        | -----------------                                                                                      | ----   |
| siteId            | A unique identifier for the site.                                                                      | string |
| notificationEmail | The email on record for the site, emailed when alerts such as site failures happen.                    | string |
| url               | The live URL for the site in question.                                                                 | string |
| adminUrl          | The URL used for the administration of the site in question.                                           | string |
| screenshotUrl     | A URL to a screenshot of your site, which can make it easier to inspect through your dashboard.        | string |
| createdAt         | When the site was created, formatted in RFC 3339 specifications.                                       | string |
| updatedAt         | When the site was updated, formatted in RFC 3339 specifications.                                       | string |
| name              | The public, human-readable moniker for the site.                                                       | string |
| customDomain      | Filling this out will override the default domain setup, instead making it whatever you want it to be. | string |
| password          | The password for administrating the site.  Keep this safe!                                             | string |
| repo              | A link to a Github repo, for use in continuous deployments.                                            | string |

## Calls related to Site [/site]
There are a couple of non-keyed site calls.  Nonetheless, they require an access
key to be included with the request.

### Get all Sites [GET]
Returns all sites that you are authorized to see.

+ Response 200 (application/json)

        [
            {
                "id":"3970e0fe-8564-4903-9a55-c5f8de49fb8b",
                "name":"example",
                "custom_domain":"www.example.com",
                "url":"http://www.example.com",
                "admin_url":"https://api.hanzo.io/sites/example",
                "screenshot_url":null,
                "created_at":"2013-09-17T05:13:08Z",
                "updated_at":"2013-09-17T05:13:19Z"
            }
        ]

### Create a Site [POST]
This will deploy a new site.

+ Request

        {
            "name": "example",
            "custom_domain": "www.example.com",
            "password": "super_secret",
            "repo": "http://github.com/bestsites/examplesite"
        }

+ Response 200

## Calls related to Site [/site/{id}]
These site calls are keyed on the SiteId in the Site object. As with all calls,
it also requires an access key to be sent along with the request.

### Get a single site [GET]

+ Response 200 (application/json)

        {
            "id":"3970e0fe-8564-4903-9a55-c5f8de49fb8b",
            "name":"example",
            "custom_domain":"www.example.com",
            "notification_email":"me@example.com",
            "url":"http://www.example.com",
            "admin_url":"https://api.hanzo.io/sites/example",
            "screenshot_url":null,
            "created_at":"2013-09-17T05:13:08Z",
            "updated_at":"2013-09-17T05:13:19Z",
        }

### Update a site [PUT]
This functionally is a POST/Create command with a contextual site ID.

+ Request

        {
            "name": "example",
            "custom_domain": "www.example.com",
            "password": "super_secret",
            "repo": "http://github.com/bestsites/examplesite"
        }

+ Response 200

### Delete a site [DELETE]
The only input this requires is the contextual site ID, and it will respond with
200 OK.

+ Response 200

# Group Store

| Field Name        | Field Description                                                                                                                             | Type              |
| ----------        | -----------------                                                                                                                             | ----              |
| name              | The publicly readable name for the store.                                                                                                     | string            |
| slug              | The unique human readable ID for the store.  Used in the url <slug>.hanzo.io.                                                           | string            |
| hostname          | Along with the Prefix, designates where the store is hosted, if not on Hanzo.com.                                                        | string            |
| prefix            | Along with the Hostname, designates where the store is hosted, if not on Hanzo.com.                                                      | string            |
| currency          | The currency type for the store (such as USD or GBP)                                                                                          | string            |
| taxNexus          | A list of addresses that comprise taxable locations, for computing sales tax, etc.                                                            | []Address         |
| listings          | An array of Product-like objects that contains overrides for any products associated with the store.  Useful for temporary or special offers. | []Product         |

## Calls related to Stores [/store/{id}]
Basic Store calls are keyed upon the unique ID of the Store.  As with all calls,
it also requires an access key included with the request.

### Get a store [GET]
+ Response 200 (application/json)

        {
          "id": "5LGwtbfDrL",
          "createdAt": "2015-04-10T00:38:40.55973Z",
          "updatedAt": "2015-04-10T01:16:54.944356Z",
          "name": "default",
          "slug": "suchtees",
          "hostname": "www.suchtees.com",
          "prefix": "/",
          "currency": "usd",
          "taxNexus": [
            {
              "line1": "123 Such St",
              "city": "Tee City"
            },
            {
              "line1": "456 Noo Ln",
              "city": "Memetown"
            }
          ],
          "listings": {
            "vMA5cpSREM": {
              "productId": "vMA5cpSREM",
              "name": null,
              "sold": null,
              "price": 30000
            }
          }
        }

## Store Product Subcalls [/store/{id}/product/{key}]
It is possible to access the products belonging to a store by passing in the
store's unique identifier, followed by the product's unique key.  As with all
calls, this also requires an access key to be included with the request.

### Get a Store's Product [GET]
+ Response 200 (application/json)

        {
          "id": "QMZncoubZM",
          "createdAt": "2015-04-10T00:38:40.428135Z",
          "updatedAt": "2015-04-10T01:16:54.858432Z",
          "slug": "doge-shirt",
          "sku": "",
          "currency": "usd",
          "price": 2000,
          "shipping": 0,
          "inventory": 0,
          "sold": 0,
          "weight": 0,
          "weightUnit": "",
          "dimensions": "",
          "taxable": false,
          "name": "Such T-shirt",
          "headline": "wow  such shirt  much tee",
          "excerpt": "",
          "description": "wow\n\tã€€ã€€ã€€ã€€ã€€ã€€such shirt\n\tmuch tee\n\n\t\t\tnice shop\n\n\tã€€so hip\n\n\tã€€ã€€ã€€ã€€so doge\n\t",
          "headerImage": {
            "type": "",
            "alt": "",
            "url": "",
            "x": 0,
            "y": 0
          },
          "media": null,
          "available": false,
          "hidden": false,
          "availability": {
            "active": false,
            "startDate": "0001-01-01T00:00:00Z",
            "endDate": "0001-01-01T00:00:00Z"
          },
          "preorder": false,
          "addLabel": "",
          "variants": [],
          "options": [
            {
              "name": "Size",
              "values": [
                "Much",
                "Wow"
              ]
            }
          ]
        }

## Store Variant Subcalls [/store/{id}/variant/{key}]
It is possible to access the product variants organized under a store by
providing the store's unique identifier and the variant's unique key. As with
all calls, this requires an API key included along with the request.

### Get a store's variant [GET]
+ Response 200 (application/json)

        {
          "id": "FOIUVMOIS872348OIJDFWOIJ",
          "createdAt": "2015-03-23T04:13.56.666272023Z",
          "updatedAt": "2015-03-23T04:13.56.666272023Z",
          "sku": "T-SHIRT-M",
          "price": 1000,
          "inventory": 30,
          "weight": 11,
          "dimensions": "5x5x5",
          "options": {
            "size": "much"
          }
        }

### Deleting a Variant [DELETE]
Deleting a Variant is as simple as passing its ID to the Variant endpoint using
the HTTP Delete method. You will not receive a response past the normal HTTP
200.

+ Response 204 (application/json)

### Updating a Variant [PUT]
The PUT method will allow you to replace a given ID's data in its entirety.
Passing in valid Variant JSON (see the POST method), will overwrite any and all
data existing on that ID.

+ Response 201 (application/json)

### Patching a Variant [PATCH]
The PATCH method will allow you to replace a given ID's data in a piecemeal
fashion.  Any fields passed in to a PATCH method will be updated with what you
request, while any fields not specified in the JSON will be left alone.

+ Response 201 (application/json)

# Group Additional objects
These objects are not tied to any particular route, but are generally retrieved
as part of another request.

## Availability
The Availability object is used in things like [Collections](#collection) and
can override the available tag if the current datestamp is within the date range
specified.

| Field Name | Field Description                                                                                                            | Type   |
| ---------- | -----------------                                                                                                            | ----   |
| active     | A flag denoting whether or not the Availability object is attempting to take precedent over any existing Available property. | bool   |
| startDate  | The date stamp where availability starts                                                                                     | string |
| endDate    | the date stamp where availability ends                                                                                       | string |

## Dates
Dates are always RFC3339.

## Currency
All money measurements, per the object definitions, are in cents, and are
returned only in whole numbers (no decimal places). Therefore, `$1 USD` will
be returned as `100`, and `$.01 USD` will be returned as `1`.

## CouponType
**CouponType** is a string which represents how the discount should be applied.

| Value         | Description                                   |
| -----         | -----------                                   |
| flat          | Discounts amount in cents from the subtotal   |
| percent       | Discounts amount as a percent of subtotal     |
| free_shipping | Discounts the cost of shipping from the total |

## Category
This string expresses the general classification or division your campaign falls
under.

This list is under constant re-evaluation, but assigned values will never
change.  If you would like to request a change to this list, contact us at
support@hanzo.io.

| Value        | Description   |
| -------      | ------------- |
| "arts"       | Arts          |
| "fashion"    | Fashion       |
| "film"       | Film          |
| "food"       | Food          |
| "gaming"     | Gaming        |
| "health"     | Health        |
| "music"      | Music         |
| "sports"     | Sports        |
| "technology" | Technology    |

## Facebook
This object holds information needed to track conversions from your form to
facebook campaigns.

| Field Name | Field Description                                                               | Type   |
| ---------- | ----------------                                                                | ----   |
| id         | The facebook-defined identifier for this conversion pathway.                    | string |
| value      | How much one conversion is defined to be worth, set by facebook.                | string |
| currency   | The currency type used, to give what's defined in the value field some meaning. | string |

## Google
This object holds information needed to track conversions from your form when it
is used in conjunction with Google campaigns.

| Field Name | Field Description                                       | Type   |
| ---------- | -----------------                                       | ----   |
| category   | The category your campaign is in, as defined by Google. | string |
| name       | the name of your Google campaign.                       | string |

## LineItem
This object is a representation of one particular instance of a customer
requesting a [Product](#product). It contains some fields associated with a [Product
variant](#variant). This can be either a prospective request (in the case of [Cart](#cart)),
or a confirmed one (in the case of [Order](#order))

| field name   | field description                                                                                                                                                     | type   |
| ----------   | -----------------                                                                                                                                                     | ----   |
| productId    | The specific identifier for the ProductId referenced in this LineItem.  This is a computed field.                                                                     | string |
| productName  | The specific identifier for the ProductName referenced in this LineItem.                                                                                              | string |
| productSlug  | The specific identifier for the [Product](#Product) referenced in this LineItem.  This is a computed field, related to the data from the Product property (see below) | string |
| collectionId | The collection ID.                                                                                                                                                    | string |
| variantId    | The specific item type ID or perk type being requested.                                                                                                               | string |
| variantName  | The specific item type Name or perk type being requested.                                                                                                             | string |
| variantSKU   | The specific item type variant SKU or perk type being requested.                                                                                                      | string |
| price        | The price of this LineItem in cents.                                                                                                                                  | int    |
| quantity     | The amount of the item/perk requested in this line.                                                                                                                   | int    |
| weight       | The item weight, typically in ounces.                                                                                                                                 | int    |

## Mailchimp
This object contains information that is used to integrate with your Mailchimp
account, allowing your form to automatically import susbcribers into Mailchimp
and more.

| Field Name       | Field Description                                                                                   | Type   |
| ----------       | -----------------                                                                                   | ----   |
| id               | The identifier related to your Mailchimp account.                                                   | string |
| apiKey           | The key that allows access into your account.                                                       | string |
| doubleOptin      | A mirror of the mailchimp option for requiring two opt-in steps.                                    | bool   |
| updateExisting   | A mirror of the mailchimp option for updating existing information as opposed to creating new info. | bool   |
| replaceInterests | A mirror of the mailchimp option for replacing interests for users, as opposed to appending it.     | bool   |
| sendWelcome      | A mirror of the mailchimp option for sending a welcome email confirmation upon signup.              | bool   |

## ThankYou
This object represents a handful of options in storing and designing the thank
you page for customers that accept an offer from your form.

| Field Name | Field Description                                                                                                       | Type   |
| ---------- | -----------------                                                                                                       | ----   |
| type       | The class of thank-you page that is configured for this object. Potential values are "Redirect", "Html", and "Disabled" | string |
| url        | Required for "Redirect" type ThankYous, this denotes the place to redirect to.  Omitted if not set.                     | string |
| html       | Required for "Html" type ThankYous, this contains the HTML used for the thank-you page.  Omitted if not set.            | string |

## Fulfillment
This object represents data regarding a shipment to a customer, to fulfill one
of their [Orders](#order)

| Field Name     | Field Description                                                                                                                                                                               | Type   |
| ----------     | -----------------                                                                                                                                                                               | ----   |
| carrier        | The courier service being used.                                                                                                                                                                 | string |
| service        | The class or rate being used - helps to distinguish between normal first-class and overnight, as an example.                                                                                    | string |
| trackingNumber | The identifier with the carrier that will allow you to find the individual shipment.                                                                                                            | string |
| createdAt      | The time this object was created.  This traditionally refers to the time that the fulfilment was processed on your company's end.                                                               | string |
| shippedAt      | The time the carrier picked up the shipment.                                                                                                                                                    | string |
| cost           | The shipping cost, in the currency's most basic unit (such as cents). To determine which currency is being used, reference the Currency property in the [Order](#order) this object belongs to. | int64  |

## Program
This object represents an incentive campaign for referring people.  It is used
by [Referrers](#referrer) in order to figure out what perks they are due.

| Field Name | Field Description                                                                                                                                                 | Type                |
| ---------- | -----------------                                                                                                                                                 | ----                |
| name       | The human-readable identifier for the program                                                                                                                     | string              |
| triggers   | A list of the number of referrals a user needs to make each perk happen. '0' means that the associated action will happen with every referral.                    | []int               |
| actions    | A list of actions that will be taken when the number of referrals, denoted in triggers, is reached.  Every action must have an index-aligned trigger to be valid. | [[]Action(#action)] |

## Action
Used by [Programs](#program), this object describes what should happen to
reward users that participate in referral campaigns.

| Field Name | Field Description                                                                                                                          | Type   |
| ---------- | -----------------                                                                                                                          | ----   |
| type       | The basic style of action to perform.  Can be 'credit' or 'refund', to grant store credit or refund some portion of a payment on an order. | string |
| currency   | In the case of flat value incentives, this has the 3-letter code to denote the currency the incentive is in.                               | string |
| amount     | In the case of flat value incentives, this is the number of basic currency units (such as cents) that should be credited.                  | int64  |
| percent    | The number of percentage points to discount on a percentage action, with 100.00 being a total forgival of charges.                         | float  |
